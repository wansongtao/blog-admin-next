user nginx;
worker_processes auto;  # 根据CPU核心数自动设置

# 错误日志配置
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;  # 一次接受所有新连接
    use epoll;  # Linux系统推荐使用epoll
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式和访问日志
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # 基本性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;  # 隐藏版本号增加安全性

    # 客户端请求相关
    client_max_body_size 10m;
    client_body_buffer_size 128k;
    client_header_timeout 60s;
    client_body_timeout 60s;

    # 缓冲区优化
    proxy_buffer_size 4k;
    proxy_buffers 4 32k;
    proxy_busy_buffers_size 64k;
    proxy_temp_file_write_size 64k;

    # 开启和配置gzip
    gzip on;
    gzip_min_length 1k;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype font/ttf image/svg+xml image/x-icon;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.";
    gzip_proxied any;

    # 文件缓存配置
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # 主服务器块（80端口）
    server {
        listen 80;
        server_name localhost;

        # 通用错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        # 处理根路径的favicon.ico请求
        location = /favicon.ico {
            proxy_pass http://localhost:8000/admin/favicon.ico;
            access_log off;
            log_not_found off;
            expires 7d;
        }

        # 将 /admin 路径代理到 8000 端口
        location /admin/ {
            proxy_pass http://localhost:8000/admin/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时设置
            proxy_connect_timeout 5s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            
            # 缓存静态内容
            proxy_cache_bypass $http_pragma $http_authorization;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
        }

        # API代理
        location /pure {
            proxy_pass http://10.0.12.4:3000/api/v1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时设置
            proxy_connect_timeout 5s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;

            # 添加限制跨域的头 - 仅允许同源请求
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            
            # 可选：添加严格的同源策略
            add_header Content-Security-Policy "default-src 'self'" always;
            
            # OPTIONS 请求处理
            if ($request_method = 'OPTIONS') {
                return 403;  # 拒绝预检请求
            }
        }

        # 上传文件代理
        location /upload {
            proxy_pass http://10.0.12.4:9000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 上传相关超时设置
            proxy_connect_timeout 10s;
            proxy_read_timeout 120s;
            proxy_send_timeout 120s;
            
            # 上传文件大小限制
            client_max_body_size 2m;
            
            # 提高传输效率
            proxy_request_buffering off;
            proxy_buffering off;
        }
    }

    # 8000端口的服务器块
    server {
        listen 8000;
        server_name localhost;
        
        root /usr/share/nginx/html;
        
        # 处理 /admin/ 路径及其下的所有请求
        location /admin/ {
            alias /usr/share/nginx/html/;
            index index.html;
            try_files $uri $uri/ /admin/index.html;

            # 添加安全相关的响应头
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;" always;

            # 处理favicon.ico - 嵌套位置块
            location = /admin/favicon.ico {
                alias /usr/share/nginx/html/favicon.ico;
                access_log off;
                log_not_found off;
                expires max;
            }

            # 确保正确处理静态资源 - 嵌套位置块
            location ~* \.(js|css|ico|png|jpg|jpeg|gif|svg|woff|woff2|ttf|eot)$ {
                expires 7d;
                add_header Cache-Control "public, no-transform";
                try_files $uri =404;
                access_log off;
            }
        }
    }
}